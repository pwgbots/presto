# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-09-25 14:49
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import django.utils.timezone
import presto.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appeal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appeal_type', models.IntegerField(blank=True)),
                ('appeal_motivation', models.TextField(default='')),
                ('time_first_viewed', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=utc))),
                ('time_decided', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=utc))),
                ('verdict', models.IntegerField(default=0)),
                ('verdict_motivation', models.TextField(blank=True, default='')),
                ('predecessor_penalty', models.FloatField(default=0)),
                ('successor_penalty', models.FloatField(default=0)),
                ('time_viewed_by_predecessor', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=utc))),
                ('time_viewed_by_successor', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=utc))),
                ('time_acknowledged_by_predecessor', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=utc))),
                ('time_acknowledged_by_successor', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=utc))),
                ('predecessor_appraisal', models.IntegerField(default=0)),
                ('successor_appraisal', models.IntegerField(default=0)),
                ('predecessor_motivation', models.TextField(blank=True, default='')),
                ('successor_motivation', models.TextField(blank=True, default='')),
                ('is_contested_by_predecessor', models.BooleanField(default=False)),
                ('is_contested_by_successor', models.BooleanField(default=False)),
                ('time_objection_assigned', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=utc))),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_selfie', models.BooleanField(default=False)),
                ('time_assigned', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_uploaded', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=utc))),
                ('time_first_download', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=utc))),
                ('time_last_download', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=utc))),
            ],
        ),
        migrations.CreateModel(
            name='CaseUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload_file', models.FileField(upload_to=presto.models.case_dir)),
                ('time_uploaded', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=32, unique=True)),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True, default='')),
                ('start_date', models.DateField(blank=True, default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=utc))),
                ('end_date', models.DateField(blank=True, default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=utc))),
                ('instructors', models.ManyToManyField(related_name='course_instructor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('code', 'name'),
            },
        ),
        migrations.CreateModel(
            name='CourseEstafette',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suffix', models.CharField(blank=True, default='', max_length=8)),
                ('start_time', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=utc))),
                ('deadline', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=utc))),
                ('end_time', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=utc))),
                ('final_reviews', models.IntegerField(default=0)),
                ('is_archived', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.Course')),
            ],
            options={
                'ordering': ('end_time', 'start_time'),
            },
        ),
        migrations.CreateModel(
            name='CourseStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dummy_index', models.IntegerField(default=0)),
                ('particulars', models.CharField(default='', max_length=16)),
                ('time_enrolled', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_action', models.DateTimeField(default=django.utils.timezone.now)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.Course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('user', 'course', 'dummy_index'),
            },
        ),
        migrations.CreateModel(
            name='Estafette',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True, default='')),
                ('upload_dir', models.CharField(default=presto.models.random_hex32, max_length=32, unique=True)),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_last_edit', models.DateTimeField(default=django.utils.timezone.now)),
                ('published', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='e_creator', to=settings.AUTH_USER_MODEL)),
                ('last_editor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='e_editor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EstafetteCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letter', models.CharField(max_length=1)),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True, default='')),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_last_edit', models.DateTimeField(default=django.utils.timezone.now)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ec_creator', to=settings.AUTH_USER_MODEL)),
                ('estafette', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.Estafette')),
                ('last_editor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ec_editor', to=settings.AUTH_USER_MODEL)),
                ('upload', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='presto.CaseUpload')),
            ],
            options={
                'ordering': ('estafette', 'letter'),
            },
        ),
        migrations.CreateModel(
            name='EstafetteLeg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True, default='')),
                ('upload_instruction', models.TextField()),
                ('review_instruction', models.TextField()),
                ('word_count', models.IntegerField(default=50)),
                ('min_minutes', models.IntegerField(default=45)),
                ('required_files', models.CharField(max_length=256)),
                ('rejectable', models.BooleanField(default=False)),
                ('required_section_title', models.CharField(blank=True, max_length=256)),
                ('required_section_length', models.IntegerField(default=0)),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_last_edit', models.DateTimeField(default=django.utils.timezone.now)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='el_creator', to=settings.AUTH_USER_MODEL)),
                ('last_editor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='el_editor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('template', 'number'),
            },
        ),
        migrations.CreateModel(
            name='EstafetteTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True, default='')),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_last_edit', models.DateTimeField(default=django.utils.timezone.now)),
                ('published', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='est_creator', to=settings.AUTH_USER_MODEL)),
                ('last_editor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='est_editor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('code', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload_dir', models.CharField(default=presto.models.random_hex32, max_length=32, unique=True)),
                ('time_registered', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_last_action', models.DateTimeField(default=django.utils.timezone.now)),
                ('final_grade', models.FloatField(default=-1)),
                ('deleted', models.BooleanField(default=False)),
                ('estafette', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.CourseEstafette')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.CourseStudent')),
            ],
            options={
                'ordering': ('estafette', 'student'),
            },
        ),
        migrations.CreateModel(
            name='ParticipantUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=32)),
                ('upload_file', models.FileField(upload_to=presto.models.participant_dir)),
                ('time_uploaded', models.DateTimeField(default=django.utils.timezone.now)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.Assignment')),
            ],
        ),
        migrations.CreateModel(
            name='PeerReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.IntegerField(default=0)),
                ('is_second_opinion', models.BooleanField(default=False)),
                ('is_rejection', models.BooleanField(default=False)),
                ('time_submitted', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=utc))),
                ('grade_motivation', models.TextField(blank=True, default='')),
                ('appraisal', models.IntegerField(default=0)),
                ('appraisal_comment', models.TextField(blank=True, default='')),
                ('improvement_appraisal', models.IntegerField(default=0)),
                ('improvement_appraisal_comment', models.TextField(blank=True, default='')),
                ('time_appraised', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=utc))),
                ('is_appeal', models.BooleanField(default=False)),
                ('time_acknowledged', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=utc))),
                ('time_appeal_assigned', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=utc))),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.Assignment')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.Participant')),
            ],
        ),
        migrations.CreateModel(
            name='Phrase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=60)),
                ('translation', models.TextField()),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.Language')),
            ],
            options={
                'ordering': ('language', 'code'),
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_id', models.CharField(max_length=64)),
                ('is_employee', models.BooleanField(default=False)),
                ('registration_number', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionnaireTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True, default='')),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_last_edit', models.DateTimeField(default=django.utils.timezone.now)),
                ('published', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evt_creator', to=settings.AUTH_USER_MODEL)),
                ('last_editor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evt_editor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16)),
                ('rank', models.IntegerField()),
                ('icon', models.CharField(default='', max_length=32)),
            ],
            options={
                'ordering': ('rank', 'name'),
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decoder', models.CharField(default=presto.models.random_hex32, max_length=32)),
                ('encoder', models.CharField(default=presto.models.random_hex32, max_length=32)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_action', models.DateTimeField(default=django.utils.timezone.now)),
                ('state', models.TextField(blank=True, default='{}')),
                ('active_role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='presto.Role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='roles',
            field=models.ManyToManyField(to='presto.Role'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='estafetteleg',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.EstafetteTemplate'),
        ),
        migrations.AddField(
            model_name='estafette',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.EstafetteTemplate'),
        ),
        migrations.AddField(
            model_name='courseestafette',
            name='estafette',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.Estafette'),
        ),
        migrations.AddField(
            model_name='courseestafette',
            name='questionnaire_template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='presto.QuestionnaireTemplate'),
        ),
        migrations.AddField(
            model_name='course',
            name='language',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='presto.Language'),
        ),
        migrations.AddField(
            model_name='course',
            name='manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='caseupload',
            name='estafette',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.Estafette'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='case',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.EstafetteCase'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='clone_of',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='original_assignment', to='presto.Assignment'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='leg',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.EstafetteLeg'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='participant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.Participant'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='predecessor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='preceding_assignment', to='presto.Assignment'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='successor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='succeeding_assignment', to='presto.Assignment'),
        ),
        migrations.AddField(
            model_name='appeal',
            name='review',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.PeerReview'),
        ),
        migrations.AlterUniqueTogether(
            name='phrase',
            unique_together=set([('language', 'code')]),
        ),
        migrations.AlterUniqueTogether(
            name='participant',
            unique_together=set([('student', 'estafette')]),
        ),
        migrations.AlterUniqueTogether(
            name='estafetteleg',
            unique_together=set([('template', 'number')]),
        ),
        migrations.AlterUniqueTogether(
            name='estafettecase',
            unique_together=set([('estafette', 'letter')]),
        ),
        migrations.AlterUniqueTogether(
            name='coursestudent',
            unique_together=set([('user', 'course', 'dummy_index')]),
        ),
        migrations.AlterUniqueTogether(
            name='courseestafette',
            unique_together=set([('course', 'estafette', 'suffix')]),
        ),
        migrations.AlterUniqueTogether(
            name='assignment',
            unique_together=set([('participant', 'leg', 'clone_of')]),
        ),
    ]
