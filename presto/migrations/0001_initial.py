# Generated by Django 4.1.3 on 2022-11-04 12:41

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import presto.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appeal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appeal_type', models.IntegerField(blank=True, default=0)),
                ('time_first_viewed', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('time_decided', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('grade', models.IntegerField(default=0)),
                ('grade_motivation', models.TextField(blank=True, default='')),
                ('predecessor_penalty', models.FloatField(default=0)),
                ('successor_penalty', models.FloatField(default=0)),
                ('time_viewed_by_predecessor', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('time_viewed_by_successor', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('time_acknowledged_by_predecessor', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('time_acknowledged_by_successor', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('predecessor_appraisal', models.IntegerField(default=0)),
                ('successor_appraisal', models.IntegerField(default=0)),
                ('predecessor_motivation', models.TextField(blank=True, default='')),
                ('successor_motivation', models.TextField(blank=True, default='')),
                ('is_contested_by_predecessor', models.BooleanField(default=False)),
                ('is_contested_by_successor', models.BooleanField(default=False)),
                ('time_objection_assigned', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_selfie', models.BooleanField(default=False)),
                ('time_assigned', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_uploaded', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('time_scanned', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('scan_result', models.IntegerField(default=0)),
                ('time_first_download', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('time_last_download', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('is_rejected', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CaseUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload_file', models.FileField(upload_to=presto.models.case_dir)),
                ('original_name', models.CharField(max_length=256)),
                ('time_uploaded', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=32, unique=True)),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True, default='')),
                ('start_date', models.DateField(blank=True, default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('end_date', models.DateField(blank=True, default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('staff_name', models.CharField(blank=True, default='', max_length=128)),
                ('staff_position', models.CharField(blank=True, default='', max_length=128)),
                ('badge_color', models.IntegerField(default=0)),
                ('is_edX', models.BooleanField(default=False)),
                ('is_hidden', models.BooleanField(default=False)),
                ('picture_dir', models.CharField(default=presto.models.pq_dir_name, max_length=35, unique=True)),
                ('picture_queue_open', models.BooleanField(default=False)),
                ('picture_queue_strict', models.BooleanField(default=False)),
                ('instructors', models.ManyToManyField(related_name='course_instructor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('code', 'name'),
            },
        ),
        migrations.CreateModel(
            name='CourseEstafette',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suffix', models.CharField(blank=True, default='', max_length=8)),
                ('start_time', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('deadline', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('review_deadline', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('end_time', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('actual_rules', models.TextField(blank=True, default='')),
                ('minimum_partners', models.IntegerField(default=0)),
                ('maximum_partners', models.IntegerField(default=0)),
                ('final_reviews', models.IntegerField(default=0)),
                ('minimum_appraisal_word_count', models.IntegerField(default=30)),
                ('minimum_appeal_word_count', models.IntegerField(default=20)),
                ('with_review_clips', models.BooleanField(default=False)),
                ('with_badges', models.BooleanField(default=False)),
                ('with_referees', models.BooleanField(default=False)),
                ('allow_questions', models.BooleanField(default=False)),
                ('scoring_system', models.IntegerField(default=0)),
                ('low_score_range', models.FloatField(default=-1000)),
                ('high_score_range', models.FloatField(default=1000)),
                ('low_grade_range', models.FloatField(default=1)),
                ('high_grade_range', models.FloatField(default=10)),
                ('passing_grade', models.FloatField(default=5.5)),
                ('speed_bonus', models.FloatField(default=0)),
                ('bonus_per_step', models.BooleanField(default=False)),
                ('is_hidden', models.BooleanField(default=False)),
                ('is_archived', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.course')),
            ],
            options={
                'ordering': ('end_time', 'start_time'),
            },
        ),
        migrations.CreateModel(
            name='CourseStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dummy_index', models.IntegerField(default=0)),
                ('particulars', models.CharField(blank=True, default='', max_length=16)),
                ('time_enrolled', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_action', models.DateTimeField(default=django.utils.timezone.now)),
                ('has_passed', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('user', 'course', 'dummy_index'),
                'unique_together': {('user', 'course', 'dummy_index')},
            },
        ),
        migrations.CreateModel(
            name='Estafette',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True, default='')),
                ('upload_dir', models.CharField(default=presto.models.relay_dir_name, max_length=34, unique=True)),
                ('badge_shade', models.IntegerField(default=0)),
                ('hours_per_appeal', models.FloatField(default=1)),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_last_edit', models.DateTimeField(default=django.utils.timezone.now)),
                ('published', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='e_creator', to=settings.AUTH_USER_MODEL)),
                ('editors', models.ManyToManyField(blank=True, related_name='e_editors', to=settings.AUTH_USER_MODEL)),
                ('last_editor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='e_last_editor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EstafetteLeg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=1)),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True, default='')),
                ('learning_objectives', models.TextField(blank=True, default='')),
                ('upload_instruction', models.TextField()),
                ('review_instruction', models.TextField()),
                ('review_model_text', models.TextField(blank=True, default='')),
                ('word_count', models.IntegerField(default=50)),
                ('min_review_minutes', models.IntegerField(default=30)),
                ('min_upload_minutes', models.IntegerField(default=120)),
                ('required_files', models.CharField(blank=True, default='', max_length=256)),
                ('rejectable', models.BooleanField(default=False)),
                ('required_section_title', models.CharField(blank=True, max_length=256)),
                ('required_section_length', models.IntegerField(default=0)),
                ('required_keywords', models.CharField(blank=True, max_length=512)),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_last_edit', models.DateTimeField(default=django.utils.timezone.now)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='el_creator', to=settings.AUTH_USER_MODEL)),
                ('last_editor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='el_editor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('template', 'number'),
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=1)),
                ('name', models.CharField(max_length=128)),
                ('instruction', models.TextField(blank=True, default='')),
                ('word_count', models.IntegerField(default=0)),
                ('appraisal', models.CharField(blank=True, default='', max_length=128)),
                ('no_comment', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('code', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload_dir', models.CharField(default=presto.models.random_hex32, max_length=32, unique=True)),
                ('time_registered', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_last_action', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_started', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('final_grade', models.FloatField(default=-1)),
                ('deleted', models.BooleanField(default=False)),
                ('estafette', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.courseestafette')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.coursestudent')),
            ],
            options={
                'ordering': ('estafette', 'student'),
                'unique_together': {('student', 'estafette')},
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16)),
                ('rank', models.IntegerField()),
                ('icon', models.CharField(default='', max_length=32)),
            ],
            options={
                'ordering': ('rank', 'name'),
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(default='(no key)', max_length=64)),
                ('decoder', models.CharField(default=presto.models.random_hex32, max_length=32)),
                ('encoder', models.CharField(default=presto.models.random_hex32, max_length=32)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_action', models.DateTimeField(default=django.utils.timezone.now)),
                ('state', models.TextField(blank=True, default='{}')),
                ('active_role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='presto.role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDownload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_downloaded', models.DateTimeField(default=django.utils.timezone.now)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.assignment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['time_downloaded'],
            },
        ),
        migrations.CreateModel(
            name='RefereeExam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_description', models.TextField(blank=True, default='')),
                ('upload_file', models.FileField(upload_to=presto.models.template_dir)),
                ('time_uploaded', models.DateTimeField(default=django.utils.timezone.now)),
                ('review_text', models.TextField(blank=True, default='')),
                ('review_grade', models.IntegerField(default=0)),
                ('appeal_text', models.TextField(blank=True, default='')),
                ('best_answers', models.CharField(max_length=10)),
                ('estafette_leg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.estafetteleg')),
                ('last_editor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rx_editor', to=settings.AUTH_USER_MODEL)),
                ('uploader', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Referee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_qualified', models.DateTimeField(default=django.utils.timezone.now)),
                ('estafette_leg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.estafetteleg')),
                ('passed_exam', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='presto.refereeexam')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QueuePicture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(upload_to=presto.models.pq_img_path)),
                ('time_received', models.DateTimeField(default=django.utils.timezone.now)),
                ('mail_from_name', models.CharField(blank=True, default='', max_length=256)),
                ('mail_from_address', models.CharField(blank=True, default='', max_length=256)),
                ('mail_subject', models.CharField(blank=True, default='', max_length=256)),
                ('mail_body', models.TextField(blank=True, default='')),
                ('suppressed', models.BooleanField(default=False)),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='presto.course')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionnaireTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True, default='')),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_last_edit', models.DateTimeField(default=django.utils.timezone.now)),
                ('published', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evt_creator', to=settings.AUTH_USER_MODEL)),
                ('editors', models.ManyToManyField(blank=True, related_name='evt_editors', to=settings.AUTH_USER_MODEL)),
                ('items', models.ManyToManyField(to='presto.item')),
                ('last_editor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='evt_last_editor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, default='')),
                ('time_posed', models.DateTimeField(default=django.utils.timezone.now)),
                ('reply', models.TextField(blank=True, default='')),
                ('time_answered', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('assignment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='presto.assignment')),
                ('instructor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('poser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.participant')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_employee', models.BooleanField(default=False)),
                ('is_edx_user', models.BooleanField(default=False)),
                ('roles', models.ManyToManyField(to='presto.role')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PeerReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.IntegerField(default=0)),
                ('is_second_opinion', models.BooleanField(default=False)),
                ('final_review_index', models.IntegerField(default=0)),
                ('is_rejection', models.BooleanField(default=False)),
                ('step_not_performed', models.BooleanField(default=False)),
                ('time_first_download', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('time_submitted', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('grade_motivation', models.TextField(blank=True, default='')),
                ('appraisal', models.IntegerField(default=0)),
                ('appraisal_comment', models.TextField(blank=True, default='')),
                ('improvement_appraisal', models.IntegerField(default=0)),
                ('improvement_appraisal_comment', models.TextField(blank=True, default='')),
                ('time_appraised', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('improper_language', models.TextField(blank=True, default='')),
                ('is_appeal', models.BooleanField(default=False)),
                ('time_acknowledged', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('time_appeal_assigned', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.assignment')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.participant')),
            ],
        ),
        migrations.CreateModel(
            name='PartnerInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_invited', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_response', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('response_text', models.TextField(blank=True, default='')),
                ('time_withdrawn', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('status', models.IntegerField(default=0)),
                ('initiator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='initiating_partner', to='presto.participant')),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invited_partner', to='presto.participant')),
            ],
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_partnered', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.IntegerField(default=0)),
                ('time_separation_filed', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('separation_motivation', models.TextField(blank=True, default='')),
                ('time_separated', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('instructor_comment', models.TextField(blank=True, default='')),
                ('initiator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='initiating_participant', to='presto.participant')),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.participant')),
                ('separated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ParticipantUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=32)),
                ('upload_file', models.FileField(upload_to=presto.models.participant_dir)),
                ('time_uploaded', models.DateTimeField(default=django.utils.timezone.now)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.assignment')),
            ],
        ),
        migrations.CreateModel(
            name='Objection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_first_viewed', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('time_decided', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('grade', models.IntegerField(default=0)),
                ('grade_motivation', models.TextField(blank=True, default='')),
                ('predecessor_penalty', models.FloatField(default=0)),
                ('successor_penalty', models.FloatField(default=0)),
                ('time_viewed_by_predecessor', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('time_viewed_by_successor', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('time_viewed_by_decider', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('time_acknowledged_by_predecessor', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('time_acknowledged_by_successor', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('time_acknowledged_by_decider', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('predecessor_appraisal', models.IntegerField(default=0)),
                ('successor_appraisal', models.IntegerField(default=0)),
                ('decider_appraisal', models.IntegerField(default=0)),
                ('predecessor_motivation', models.TextField(blank=True, default='')),
                ('successor_motivation', models.TextField(blank=True, default='')),
                ('is_contested_by_predecessor', models.BooleanField(default=False)),
                ('is_contested_by_successor', models.BooleanField(default=False)),
                ('is_contested_by_referee', models.BooleanField(default=False)),
                ('time_instructor_assigned', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('appeal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.appeal')),
                ('referee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.referee')),
            ],
        ),
        migrations.CreateModel(
            name='LetterOfAcknowledgement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_issued', models.DateTimeField(default=django.utils.timezone.now)),
                ('authentication_code', models.CharField(default=presto.models.random_hex32, max_length=32)),
                ('step_list', models.CharField(blank=True, default='', max_length=32)),
                ('time_first_case', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('time_last_case', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('appeal_case_count', models.IntegerField(default=0)),
                ('extra_hours', models.IntegerField(default=0)),
                ('average_appreciation', models.FloatField(default=0)),
                ('time_last_rendered', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('rendering_count', models.IntegerField(default=0)),
                ('time_last_verified', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('verification_count', models.IntegerField(default=0)),
                ('estafette', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.courseestafette')),
                ('participant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='presto.participant')),
                ('referee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='presto.referee')),
            ],
        ),
        migrations.CreateModel(
            name='LegVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leg_number', models.IntegerField(default=0)),
                ('star_range', models.IntegerField(default=0)),
                ('presenter_initials', models.CharField(max_length=6)),
                ('url', models.CharField(blank=True, max_length=512)),
                ('description', models.TextField(blank=True, default='')),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.language')),
            ],
        ),
        migrations.CreateModel(
            name='ItemReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, default='')),
                ('rating', models.IntegerField(blank=True, default=0)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.item')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.peerreview')),
            ],
        ),
        migrations.CreateModel(
            name='ItemAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, default='')),
                ('rating', models.IntegerField(blank=True, default=0)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.assignment')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.item')),
            ],
        ),
        migrations.CreateModel(
            name='EstafetteTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True, default='')),
                ('default_rules', models.TextField(blank=True, default='')),
                ('upload_dir', models.CharField(default=presto.models.template_dir_name, max_length=34, unique=True)),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_last_edit', models.DateTimeField(default=django.utils.timezone.now)),
                ('published', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='est_creator', to=settings.AUTH_USER_MODEL)),
                ('editors', models.ManyToManyField(blank=True, related_name='est_editors', to=settings.AUTH_USER_MODEL)),
                ('last_editor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='est_last_editor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='estafetteleg',
            name='review_items',
            field=models.ManyToManyField(to='presto.item'),
        ),
        migrations.AddField(
            model_name='estafetteleg',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.estafettetemplate'),
        ),
        migrations.AddField(
            model_name='estafetteleg',
            name='upload_items',
            field=models.ManyToManyField(related_name='assignment_item', to='presto.item'),
        ),
        migrations.CreateModel(
            name='EstafetteCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letter', models.CharField(max_length=1)),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True, default='')),
                ('required_keywords', models.CharField(blank=True, max_length=512)),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_last_edit', models.DateTimeField(default=django.utils.timezone.now)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ec_creator', to=settings.AUTH_USER_MODEL)),
                ('estafette', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.estafette')),
                ('last_editor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ec_editor', to=settings.AUTH_USER_MODEL)),
                ('upload', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='presto.caseupload')),
            ],
            options={
                'ordering': ('estafette', 'letter'),
                'unique_together': {('estafette', 'letter')},
            },
        ),
        migrations.AddField(
            model_name='estafette',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.estafettetemplate'),
        ),
        migrations.AddField(
            model_name='courseestafette',
            name='estafette',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.estafette'),
        ),
        migrations.AddField(
            model_name='courseestafette',
            name='questionnaire_template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='presto.questionnairetemplate'),
        ),
        migrations.AddField(
            model_name='course',
            name='language',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.SET_DEFAULT, to='presto.language'),
        ),
        migrations.AddField(
            model_name='course',
            name='manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='caseupload',
            name='estafette',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presto.estafette'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='case',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.estafettecase'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='clone_of',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='original_assignment', to='presto.assignment'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='leg',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.estafetteleg'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='participant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.participant'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='predecessor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='preceding_assignment', to='presto.assignment'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='successor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='succeeding_assignment', to='presto.assignment'),
        ),
        migrations.AddField(
            model_name='appeal',
            name='referee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.referee'),
        ),
        migrations.AddField(
            model_name='appeal',
            name='review',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.peerreview'),
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, default='')),
                ('time_announced', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_last_edited', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_cancelled', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('urgent', models.BooleanField(default=True)),
                ('dismissable', models.BooleanField(default=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='presto.course')),
                ('course_relay', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='presto.courseestafette')),
                ('user_role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='presto.role')),
            ],
        ),
        migrations.CreateModel(
            name='PrestoBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('levels', models.IntegerField(default=0)),
                ('attained_level', models.IntegerField(default=0)),
                ('time_issued', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_last_rendered', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('rendering_count', models.IntegerField(default=0)),
                ('time_last_verified', models.DateTimeField(default=datetime.datetime(2000, 12, 31, 23, 0, tzinfo=datetime.timezone.utc))),
                ('verification_count', models.IntegerField(default=0)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='presto.course')),
                ('participant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='presto.participant')),
                ('referee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='presto.referee')),
            ],
            options={
                'unique_together': {('course', 'participant', 'referee', 'attained_level')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='estafetteleg',
            unique_together={('template', 'number')},
        ),
        migrations.AlterUniqueTogether(
            name='courseestafette',
            unique_together={('course', 'estafette', 'suffix')},
        ),
        migrations.AlterUniqueTogether(
            name='assignment',
            unique_together={('participant', 'leg', 'clone_of')},
        ),
    ]
